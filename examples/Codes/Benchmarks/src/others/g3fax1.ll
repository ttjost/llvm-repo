; ModuleID = 'g3fax.c'
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"
target triple = "i386-unknown-linux-gnu"

@fax = global [1792 x i8] c"II*\00\93\A1\00\00\00\80\B2Y\01\00\80\B2Y\01\00\80\B2Y\01\00\80\B2Y\01\00\80\A9\9A\7Ft\F3\15gp\C5\1Cr\10>\E8\F2\81opdp\87\1F\A4\E7+C\0E~\90\8348\02\92\D1\9E\EF\F3\1D\DC\C1\E5\F0\83\F4|?\81\827D'\854\B8\83\1Fz\90\8C6xCv\C3\C1\10\BE\9E\01\00\80\A9\F2\B9\BF{>\D8\88\C1\CE\F3}\FE\99\D6\95\B3+\F7\A0/\F3}\BE\FB\AC\FA\DD\F3}\BE\CF\CF+\E6\F7y\9F\EF\F3\F3\88\E5\F3}\BE\CF\F7\93\EAy\BE\AE<\DF_\E6\F7\C4\FC\9E\98\EF\F3\B7\CF\97\CF?\EB\19\00\80\A9\DA\F7}\9F\DF\DF\E0}\F9\E0\FD<\DF\E7\F7>\F5\FE\B2\9F\BD\EC\F7\A0/\F3}\BE\EF\FB\BE\EAy\9F\EF\F3}\C4\8A\97\97\F9>?/\1F1\DF\E7\FB|?\A9\9E\E7\EB\CA\F3\FDe\BE\BF\9C\ED/\F3}\FE\F6\F9\F2\B3{_\CF\00\80\A9\BA\EF}\FE\ED3^\CC8\CF\F7\F9y\D0\89{\C5}C\D0_\E6\FB|\BF\EFU\CF\FB|\9F\EF#V\BC\BC\CC\F7\F9\F9j\F0|\9F\EF\F3\FD\A4z\9E\AF+\CFwHu\BF|\FB\BE\E2\9E\BF}\BE\FC\DB\CF\EB\19\00\80\A9\BA\EF}~>\83\E7\E57x\9E\C3\1B\9E\07\9D\7F\83\BF\97Q\E1\0D\EF\F9~\DF\AB\9Ewx\CFo\08\9F\0C\E9\17p\9F\9F_V\C0{\BE\83\FBI\F5<_W\85\13\13\1F\BC\EF{\87\13g\C8n8\E2\BE\CF\EB\19\00\80\A9\9A\EF\E0y\E0\11+F\BC\9C\07=\9F\CF\CE\E7\AB\91_\EE\F3|\9F\AFz\DE\EF\F3\FC\E5<\EA\FE2\DF\E7\E7\89\C9/\F3}\BE\9FT\CF\F3u\E6\97\F3y\BE\EF\DF>?\9F\E7o\1Fx\FF\CE\EB\19\00\80\A9\9A\EF\F3\F3\C0#V\8Cx9\0Fz\06?g\F0e\E4\97\EF\9B\EF\F3U\CF\FB\F7\CD_\CE\A3\EE/\F3}~\9E\CFx\99\EF\F3\FD\A4z\9E\AF3\BF\9C\CF\F3\DDy\9F\9F\CF\F3\B7\0F\EC|^\CF\00\80\A9\9A\EF\F3\F3\C0\E7\F9\8A\E5/\F3A\97\0F|\9FG}9\DF\F3}\BE\EAw\9F\EF\F9>?\AF\98\DF\E7}\BE\CF\CF\E7\81_\E6\FB|?\A9\9E\E7\EB\D2\F7y~\9E\EF\F3}~>\CF\DF\BE\DCy~^\CF\00\80\A9\9A\EF\F3\F3d\C8A\C0\90C3\9A!\E8\90e\E0\0FE\7F\99\DF\90\9E\AF\0C\B9\F9\0D9\08\9F\0C\C9h\CFo\08?\83\CB\AF =\DF\C1\13\E5\1C\A2\93\A2\19%\E6\90\83\1C\84\CF!\BB\97\9BC\0E\A27\00\80\B2Y\01\00\80\B2Y\01\00\80\B2Y\01\00\80\B2Y\01\00\80\B2Y\01\00\80[\CA\5C8\14\81b\85\83\15g\97\04\E6\8A\9Er*\B0\D0Qa\D3\B0\09\E4\11G\02\1E\10\1C\92A\7F\98\C5\A0\1C\1D4\83g|x\D0\01\FB\A0T8 \8D\07\194\83d\F0\05\22\D0\C3\07\9BA\06\1D\94\80y\05\F3\03\1D\06B\80\9E\91A\07t\FB\01\00\80\A9\C0@\84\06K\9C\B1\90&\B0p\15\96\82\85\8E\0E\8B\86\F9A\06\E2H\C0\03\16\19;\FA0\8BA9\E2H\86\91\D1A\1B?l\06\C5\E0\0A\E3p\C7\874\92\C1\0B*Ga\F4\F0\A1\834z\E8 \02\16\0Bl\06t\18\E6\19\E6\0Fit@\B7\1F\00\80i\01\A1\A8\82\BA\1C\E6H\FC8\07fnRX\E8T@<\18\0F9\C4\91\80\07\10\05\0D\FC0+G8\10\05;\FA\E8\A0\8D\1El\1A=t\90\15,\06\EC\0F\A3\A0r\88@\02\19\F4\D1F\06\1D\94@\1BY\D0F\07A\C0f`sPG\06t\FB\01\00\80\09\86\81\8A\AE\D0\07\1D\EB\85\B0)[\15\16:\0DR\C1| \8342h\03Q\D0@\07u\A8\A3r\94\83.\A8\F1\E3C\1B\1D\B0\0F\1A\D0AW\98=\B0?\E8\19\C5\C03l\06}t\D0\C3\87\09t\D0\05\1D<(\1Dmd\90F\06\EE\E8 v\18\00\80i\1D\07\C1\02Y \05\06\C3+!h\F0\A7\0C\0B\1D\04\A9\10\1C9\A4!\0D\09\A4a\FE\B0\18\D4\A1\8E1(\07]\E0\C0\8F\07i\F4`3hC\DEr\10\1C\E4\C1~8pF\11 \07\9BA\1F\09d\D0A\09|\E8\02\C4\83/\C8 \81\1C\12\A0\18\D4\BE\00\80\A9\02C\02\FA\22\1C\E1 \8Cj\E1\D5\90\81\01\0D\0B\1D\0A\A9\10G\0E6\03\F6F\1C9\D84\1AH\A0r\94\03\91a~h\A3\83\1El\06\1D\04\08\DA\F0\07\FB\E1@\1F+\A0\03\9BA\1Fmd\D0A\09t\10\18\8C\0CcA\0F\0D\E4\D0\01\FB\80\DB3\00\80\09\03:\04\160\08G\81\19\D9\CD\19\02\0D\0B]\09\AD\91@\0E\E6\0F\8BA\02i\B07n\A4\B1\1C\E5\A8\A3\0F\8B\83E#\83\06t\90\C1X\90\86ft\D0Cq$\A3d\A4!8d\D0G\1BidP\02\1Dt\01\E2a,\E8 \81f\B4\C1>0\EC\0F\00\80\89\0E\03\0C\0Ab\5C8\E6\C2C\A6O\8E\CF\84\94a\AE\AB\22+$ \07\06\07\E3\90F\1C2\88#\8D\1B\AD\91\826z\B0iX\1C:hC\0E\16\87\E5\90\81dt\D0\83\F9!\12\B4\D1A\0F?\DA\C8\A0\83\0A\A4\11\18\09d\C0Wt\90@\0Ei\D8\1C\B8=\03\00\80\09\82`\C1\82\80#\E1\07\03\83\83\A4`a\AFi\10\8ETp\8E6,\1Eutp\A35R\90F\02\19\B4a\FE\E8\A0\0Dy \0E\A9\91\83dt\90\86\CD \F2\07\1A\E8\A0\8762\90@\06\11h#0\D2H#\08|h#\834(\06\C4^\00\80IMX\C2aC\80\00A\1F\8A\0B\0C\0B\15X\B0S\87\0B\81\05:@d\DC\A0s|\E8 \19\F4Gj\E4\90\82\0E\12`\1F\A4\06\A2\D1A\1F\16\07\9B\01\1F\D8,H#\8D\D2\91@\06\1Dd`s(\E6\EE\FC\E3\C2=H\E1wR\02\00\80I\22\F0\02\18\1C\04\18Z\5C\F3\C3\1C\1A\16\A6h.\FCX\C09!\D0G\0B:\88C\06i\A4\06c\D0A\1F\E6\0F\8B\83\D1\B0X\C1\1E\A0\C3\B09$\90A\1C>(\12\83\B5\96\0B%h\00\80\09\0A-0]\E0\C0\B9p,\E1GO\CA07\C7\18\E6\A7\A3\8C\0Fc\C0\1F\1D\B4\C0\10`<\8C\86y\05\9B\01\9D\80E\86\C5\A0\0D\1Dp\C2\DE\1C\8F\16\C3<\94\94\01\00\80\09\04\E4\85#\0E\A3`\5CH\0F*\F1c\12X6C-y\99a\A4\86r\F0\01\1D\03\F3\07\9D\809\07\E2\D0A\06\0C\CE\05\8D\DF\81\D7pH\82\02\00\80\89\1A\16\0D\19\C2q\11.E\DC\01Y*\F4\A4\04\13\B0\16\C2eF\9BqL\80\C3\A0\AF\E0\19\1Dd@\17\22\9EB\B9\18\CC\A7\04\05\00\80\89\0A\E88\FC@\80\91\82\82\E9\85", align 1
@bitsleft = internal unnamed_addr global i32 0, align 4
@nextbyte = internal unnamed_addr global i8* getelementptr inbounds ([1792 x i8], [1792 x i8]* @fax, i32 0, i32 0), align 4
@lastbyte = internal unnamed_addr global i32 0, align 4
@eof = internal unnamed_addr global i1 false
@sum = internal unnamed_addr global i32 0, align 4
@g3white = internal constant [2304 x i8] c`abcde\00\00\00\00fghialign 1
@rowbuf = internal global [1728 x i8] zeroinitializer, align 1
@g3black = internal constant [3072 x i8] c"\00\00\04\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\07\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0A\09\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0B\0C\00\0D\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0E\00\00\0F\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\00\00B\00\00\00\00\00\00\00\11\12\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF\00\00\00\00\00\00]\00\00\00^_\00\00\00\00\00\00\00\00\00\19\1A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\15\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00`abcde\00\00\00\00fghialign 1
@.str = private unnamed_addr constant [5 x i8] c"666\0A\00", align 1
@.str1 = private unnamed_addr constant [4 x i8] c"-1\0A\00", align 1
@str = private unnamed_addr constant [3 x i8] c"-1\00"
@str2 = private unnamed_addr constant [4 x i8] c"666\00"

; Function Attrs: nounwind
define i32 @getbit() #0 {
entry:
  %0 = load i32, i32* @bitsleft, align 4, !tbaa !1
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* @bitsleft, align 4, !tbaa !1
  %cmp = icmp slt i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** @nextbyte, align 4, !tbaa !5
  %cmp1 = icmp ult i8* %1, getelementptr inbounds ([1792 x i8], [1792 x i8]* @fax, i32 1, i32 0)
  br i1 %cmp1, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.then
  store i32 0, i32* @lastbyte, align 4, !tbaa !1
  store i1 true, i1* @eof, align 1
  br label %if.end3

if.else:                                          ; preds = %if.then
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1
  store i8* %incdec.ptr, i8** @nextbyte, align 4, !tbaa !5
  %2 = load i8, i8* %1, align 1, !tbaa !7
  %conv = zext i8 %2 to i32
  store i32 %conv, i32* @lastbyte, align 4, !tbaa !1
  store i32 7, i32* @bitsleft, align 4, !tbaa !1
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.else, %entry
  %3 = load i32, i32* @lastbyte, align 4, !tbaa !1
  %and = and i32 %3, 1
  %shr = lshr i32 %3, 1
  store i32 %shr, i32* @lastbyte, align 4, !tbaa !1
  ret i32 %and
}

; Function Attrs: nounwind
define void @skiptoeol() #0 {
entry:
  br label %for.body

for.body:                                         ; preds = %entry, %for.body
  %n.05 = phi i32 [ 0, %entry ], [ %inc.n.0, %for.body ]
  %call = tail call i32 @getbit()
  %cmp1 = icmp eq i32 %call, 0
  %inc = zext i1 %cmp1 to i32
  %inc.n.0 = add nsw i32 %inc, %n.05
  %cmp = icmp slt i32 %inc.n.0, 11
  br i1 %cmp, label %for.body, label %while.cond

while.cond:                                       ; preds = %for.body, %while.cond
  %call2 = tail call i32 @getbit()
  %cmp3 = icmp eq i32 %call2, 0
  br i1 %cmp3, label %while.cond, label %while.end

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: nounwind
define void @rowout(i8* nocapture readonly %rowbuf, i32 %maxcol, i32 %currow) #0 {
entry:
  %0 = load i32, i32* @sum, align 4, !tbaa !1
  %cmp4 = icmp sgt i32 %maxcol, 0
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %sm.07 = phi i32 [ %add, %for.body ], [ %0, %entry ]
  %i.06 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %s.05 = phi i8* [ %incdec.ptr, %for.body ], [ %rowbuf, %entry ]
  %1 = load i8, i8* %s.05, align 1, !tbaa !7
  %conv = zext i8 %1 to i32
  %add = add i32 %conv, %sm.07
  %inc = add nuw nsw i32 %i.06, 1
  %incdec.ptr = getelementptr inbounds i8, i8* %s.05, i32 1
  %exitcond = icmp eq i32 %inc, %maxcol
  br i1 %exitcond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %sm.0.lcssa = phi i32 [ %0, %entry ], [ %add, %for.body ]
  store i32 %sm.0.lcssa, i32* @sum, align 4, !tbaa !1
  ret void
}

; Function Attrs: nounwind
define i32 @main() #0 {
entry:
  store i1 false, i1* @eof, align 1
  store i32 0, i32* @sum, align 4, !tbaa !1
  store i32 0, i32* @lastbyte, align 4, !tbaa !1
  store i32 0, i32* @bitsleft, align 4, !tbaa !1
  store i8* getelementptr inbounds ([1792 x i8], [1792 x i8]* @fax, i32 0, i32 0), i8** @nextbyte, align 4, !tbaa !5
  tail call void @skiptoeol()
  %.b120136 = load i1, i1* @eof, align 1
  br i1 %.b120136, label %for.end90, label %for.body

for.body:                                         ; preds = %entry, %for.end87
  %0 = phi i32 [ %21, %for.end87 ], [ 0, %entry ]
  %call = tail call i32 @getbit()
  %conv1 = shl i32 %call, 1
  %call2 = tail call i32 @getbit()
  %add = add nsw i32 %conv1, %call2
  %conv4 = shl i32 %add, 1
  %call6 = tail call i32 @getbit()
  %add7 = add nsw i32 %conv4, %call6
  br label %for.cond9.outer

for.cond9.outer:                                  ; preds = %if.end67, %if.else73, %for.body
  %code.0.ph = phi i32 [ %add7, %for.body ], [ %call71, %if.end67 ], [ %add84, %if.else73 ]
  %runtab.0.ph = phi i8* [ getelementptr inbounds ([2304 x i8], [2304 x i8]* @g3white, i32 0, i32 0), %for.body ], [ getelementptr inbounds ([3072 x i8], [3072 x i8]* @g3black, i32 0, i32 0), %if.end67 ], [ getelementptr inbounds ([2304 x i8], [2304 x i8]* @g3white, i32 0, i32 0), %if.else73 ]
  %runetab.0.ph = phi i8* [ getelementptr inbounds ([2304 x i8], [2304 x i8]* @g3white, i32 1, i32 0), %for.body ], [ getelementptr inbounds ([3072 x i8], [3072 x i8]* @g3black, i32 1, i32 0), %if.end67 ], [ getelementptr inbounds ([2304 x i8], [2304 x i8]* @g3white, i32 1, i32 0), %if.else73 ]
  %runlen.0.ph = phi i32 [ 0, %for.body ], [ %runlen.2, %if.end67 ], [ %runlen.2, %if.else73 ]
  %runcolor.0.ph = phi i32 [ 0, %for.body ], [ 1, %if.end67 ], [ %runcolor.1, %if.else73 ]
  %curcol.0.ph = phi i32 [ 0, %for.body ], [ %curcol.2, %if.end67 ], [ %curcol.2, %if.else73 ]
  br label %for.cond9

for.cond9:                                        ; preds = %for.cond9.outer, %if.then
  %code.0 = phi i32 [ %add16, %if.then ], [ %code.0.ph, %for.cond9.outer ]
  %runtab.0 = phi i8* [ %add.ptr, %if.then ], [ %runtab.0.ph, %for.cond9.outer ]
  %.b = load i1, i1* @eof, align 1
  br i1 %.b, label %for.end87, label %for.body12

for.body12:                                       ; preds = %for.cond9
  %conv13 = shl i32 %code.0, 1
  %shl14 = and i32 %conv13, 510
  %call15 = tail call i32 @getbit()
  %add16 = add nsw i32 %call15, %shl14
  %idxprom = and i32 %add16, 255
  %arrayidx = getelementptr inbounds i8, i8* %runtab.0, i32 %idxprom
  %1 = load i8, i8* %arrayidx, align 1, !tbaa !7
  %cmp = icmp eq i8 %1, 0
  br i1 %cmp, label %if.then, label %if.end28

if.then:                                          ; preds = %for.body12
  %add.ptr = getelementptr inbounds i8, i8* %runtab.0, i32 256
  %cmp20 = icmp ult i8* %add.ptr, %runetab.0.ph
  br i1 %cmp20, label %for.cond9, label %if.end

if.end:                                           ; preds = %if.then
  %cmp24 = icmp eq i32 %idxprom, 1
  br i1 %cmp24, label %if.then34, label %if.then26

if.then26:                                        ; preds = %if.end
  tail call void @skiptoeol()
  br label %for.end87

if.end28:                                         ; preds = %for.body12
  %conv18.le = zext i8 %1 to i32
  %dec = add nsw i32 %conv18.le, -1
  %cmp29 = icmp sgt i32 %dec, 63
  br i1 %cmp29, label %if.then31, label %if.else45

if.then31:                                        ; preds = %if.end28
  %cmp32 = icmp sgt i32 %dec, 253
  br i1 %cmp32, label %if.then34, label %if.end43

if.then34:                                        ; preds = %if.then31, %if.end
  %cmp35 = icmp eq i32 %curcol.0.ph, 0
  br i1 %cmp35, label %if.else, label %for.end87

if.else:                                          ; preds = %if.then34
  %inc = add nsw i32 %0, 1
  %cmp38 = icmp sgt i32 %0, 1
  br i1 %cmp38, label %if.then40, label %for.end87

if.then40:                                        ; preds = %if.else
  store i1 true, i1* @eof, align 1
  br label %for.end87

if.end43:                                         ; preds = %if.then31
  %sub = shl nuw nsw i32 %conv18.le, 6
  %mul = add i32 %runlen.0.ph, -4160
  %add44 = add i32 %mul, %sub
  br label %if.end67

if.else45:                                        ; preds = %if.end28
  %add46 = add nsw i32 %dec, %runlen.0.ph
  %add47 = add nsw i32 %add46, %curcol.0.ph
  %cmp48 = icmp sgt i32 %add47, 1728
  %sub51 = sub nsw i32 1728, %curcol.0.ph
  %sub51.add46 = select i1 %cmp48, i32 %sub51, i32 %add46
  %cmp55133 = icmp sgt i32 %sub51.add46, 0
  br i1 %cmp55133, label %for.cond53.for.end_crit_edge, label %for.end

for.cond53.for.end_crit_edge:                     ; preds = %if.else45
  %conv58 = trunc i32 %runcolor.0.ph to i8
  %2 = sub i32 0, %runlen.0.ph
  %3 = sub i32 %2, %curcol.0.ph
  %4 = zext i8 %1 to i32
  %5 = sub i32 %3, %4
  %6 = icmp sgt i32 %5, -1729
  %smax = select i1 %6, i32 %5, i32 -1729
  %7 = add i32 %curcol.0.ph, %smax
  %scevgep = getelementptr [1728 x i8], [1728 x i8]* @rowbuf, i32 0, i32 %curcol.0.ph
  %8 = sub i32 0, %runlen.0.ph
  %9 = sub i32 %8, %curcol.0.ph
  %10 = zext i8 %1 to i32
  %11 = sub i32 %9, %10
  %12 = icmp sgt i32 %11, -1729
  %smax144 = select i1 %12, i32 %11, i32 -1729
  %13 = add i32 %curcol.0.ph, %smax144
  %14 = icmp sgt i32 %13, -2
  %.op146 = add i32 %13, 1
  %15 = select i1 %14, i32 %.op146, i32 -1
  %16 = sub i32 %15, %curcol.0.ph
  %17 = sub i32 %16, %smax144
  call void @llvm.memset.p0i8.i32(i8* %scevgep, i8 %conv58, i32 %17, i32 1, i1 false)
  %18 = icmp sgt i32 %7, -2
  %.op = add i32 %7, 1
  %19 = select i1 %18, i32 %.op, i32 -1
  %20 = sub i32 %19, %smax
  br label %for.end

for.end:                                          ; preds = %for.cond53.for.end_crit_edge, %if.else45
  %curcol.1.lcssa = phi i32 [ %20, %for.cond53.for.end_crit_edge ], [ %curcol.0.ph, %if.else45 ]
  %cmp61 = icmp sgt i32 %curcol.1.lcssa, 1727
  br i1 %cmp61, label %if.then63, label %if.end64

if.then63:                                        ; preds = %for.end
  tail call void @skiptoeol()
  br label %for.end87

if.end64:                                         ; preds = %for.end
  %cmp65 = icmp eq i32 %runcolor.0.ph, 0
  %cond = zext i1 %cmp65 to i32
  br label %if.end67

if.end67:                                         ; preds = %if.end64, %if.end43
  %runlen.2 = phi i32 [ %add44, %if.end43 ], [ 0, %if.end64 ]
  %runcolor.1 = phi i32 [ %runcolor.0.ph, %if.end43 ], [ %cond, %if.end64 ]
  %curcol.2 = phi i32 [ %curcol.0.ph, %if.end43 ], [ %curcol.1.lcssa, %if.end64 ]
  %cmp68 = icmp eq i32 %runcolor.1, 1
  %call71 = tail call i32 @getbit()
  br i1 %cmp68, label %for.cond9.outer, label %if.else73

if.else73:                                        ; preds = %if.end67
  %conv76 = shl i32 %call71, 1
  %call78 = tail call i32 @getbit()
  %add79 = add nsw i32 %call78, %conv76
  %conv81 = shl i32 %add79, 1
  %shl82 = and i32 %conv81, 510
  %call83 = tail call i32 @getbit()
  %add84 = add nsw i32 %shl82, %call83
  br label %for.cond9.outer

for.end87:                                        ; preds = %for.cond9, %if.then34, %if.then40, %if.else, %if.then63, %if.then26
  %21 = phi i32 [ %inc, %if.then40 ], [ %inc, %if.else ], [ %0, %if.then63 ], [ %0, %if.then26 ], [ 0, %if.then34 ], [ %0, %for.cond9 ]
  tail call void @rowout(i8* getelementptr inbounds ([1728 x i8], [1728 x i8]* @rowbuf, i32 0, i32 0), i32 1728, i32 undef)
  %.b120 = load i1, i1* @eof, align 1
  br i1 %.b120, label %for.end90, label %for.body

for.end90:                                        ; preds = %for.end87, %entry
  %22 = load i32, i32* @sum, align 4, !tbaa !1
  %cmp91 = icmp eq i32 %22, 11296
  br i1 %cmp91, label %if.else95, label %if.then93

if.then93:                                        ; preds = %for.end90
  %puts121 = tail call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str2, i32 0, i32 0))
  br label %return

if.else95:                                        ; preds = %for.end90
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str, i32 0, i32 0))
  br label %return

return:                                           ; preds = %if.else95, %if.then93
  %retval.0 = phi i32 [ 15, %if.then93 ], [ 66, %if.else95 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i32(i8* nocapture, i8, i32, i32, i1) #1

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="pentium4" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (trunk 251312) (llvm/trunk 234885)"}
!1 = !{!2, !2, i64 0}
!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !3, i64 0}
!7 = !{!3, !3, i64 0}
