; ModuleID = 'fir_print.c'					; ModuleID = 'fir_print.c'
target datalayout = "E-m:e-p:32:32-i64:64-f128:64-n32-S64"	target datalayout = "E-m:e-p:32:32-i64:64-f128:64-n32-S64"
target triple = "sparc-unknown-linux-gnu"			target triple = "sparc-unknown-linux-gnu"

@fir_int = global [36 x i32] [i32 -2, i32 1, i32 4, i32 3, i3	@fir_int = global [36 x i32] [i32 -2, i32 1, i32 4, i32 3, i3
@in_data = global [701 x i32] [i32 0, i32 0, i32 0, i32 0, i3	@in_data = global [701 x i32] [i32 0, i32 0, i32 0, i32 0, i3
@out_data = global [720 x i32] [i32 942, i32 -1803, i32 -1114	@out_data = global [720 x i32] [i32 942, i32 -1803, i32 -1114
@output = global [720 x i32] [i32 1, i32 0, i32 0, i32 0, i32	@output = global [720 x i32] [i32 1, i32 0, i32 0, i32 0, i32
@.str = private unnamed_addr constant [7 x i8] c"0x%x, \00", 	@.str = private unnamed_addr constant [7 x i8] c"0x%x, \00", 
@str = private unnamed_addr constant [3 x i8] c"-1\00"		@str = private unnamed_addr constant [3 x i8] c"-1\00"

; Function Attrs: nounwind					; Function Attrs: nounwind
define i32 @main() #0 {						define i32 @main() #0 {
entry:								entry:
  br label %for.body.i.preheader			      |	  br label %for.body
							      <
for.body.i.preheader:                             ; preds = % <
  %i.018 = phi i32 [ 0, %entry ], [ %inc, %fir_filter_int.exi <
  br label %for.body.i					      <
							      <
for.body.i:                                       ; preds = % <
  %out.addr.046.i = phi i32* [ %incdec.ptr11.i, %for.end.i ], <
  %coef_start.045.i = phi i32* [ %coef_start.1.i, %for.end.i  <
  %in_ptr.044.i = phi i32* [ %in_ptr.1.i, %for.end.i ], [ get <
  %acc_length.043.i = phi i32 [ %acc_length.2.i, %for.end.i ] <
  %i.042.i = phi i32 [ %inc20.i, %for.end.i ], [ 0, %for.body <
  %incdec.ptr.i = getelementptr inbounds i32, i32* %coef_star <
  %0 = load i32, i32* %coef_start.045.i, align 4, !tbaa !1    <
  %1 = load i32, i32* %in_ptr.044.i, align 4, !tbaa !1	      <
  %mul.i = mul nsw i32 %1, %0				      <
  %cmp636.i = icmp sgt i32 %acc_length.043.i, 1		      <
  br i1 %cmp636.i, label %for.body7.i.preheader, label %for.e <
							      <
for.body7.i.preheader:                            ; preds = % <
  br label %for.body7.i					      <
							      <
for.body7.i:                                      ; preds = % <
  %in_ptr.044.pn.i = phi i32* [ %data_ptr.040.i, %for.body7.i <
  %coef_ptr.039.i = phi i32* [ %incdec.ptr8.i, %for.body7.i ] <
  %acc.038.i = phi i32 [ %add.i, %for.body7.i ], [ %mul.i, %f <
  %j.037.i = phi i32 [ %inc.i, %for.body7.i ], [ 1, %for.body <
  %data_ptr.040.i = getelementptr inbounds i32, i32* %in_ptr. <
  %incdec.ptr8.i = getelementptr inbounds i32, i32* %coef_ptr <
  %2 = load i32, i32* %coef_ptr.039.i, align 4, !tbaa !1      <
  %3 = load i32, i32* %data_ptr.040.i, align 4, !tbaa !1      <
  %mul10.i = mul nsw i32 %3, %2				      <
  %add.i = add nsw i32 %mul10.i, %acc.038.i		      <
  %inc.i = add nuw nsw i32 %j.037.i, 1			      <
  %exitcond.i = icmp eq i32 %inc.i, %acc_length.043.i	      <
  br i1 %exitcond.i, label %for.end.i.loopexit, label %for.bo <
							      <
for.end.i.loopexit:                               ; preds = % <
  %add.i.lcssa = phi i32 [ %add.i, %for.body7.i ]	      <
  br label %for.end.i					      <
							      <
for.end.i:                                        ; preds = % <
  %acc.0.lcssa.i = phi i32 [ %mul.i, %for.body.i ], [ %add.i. <
  %incdec.ptr11.i = getelementptr inbounds i32, i32* %out.add <
  store i32 %acc.0.lcssa.i, i32* %out.addr.046.i, align 4, !t <
  %cmp12.i = icmp eq i32* %in_ptr.044.i, getelementptr inboun <
  %cmp14.i = icmp slt i32 %acc_length.043.i, 35		      <
  %inc16.i = zext i1 %cmp14.i to i32			      <
  %incdec.ptr17.i = getelementptr inbounds i32, i32* %in_ptr. <
  %acc_length.2.v.i = select i1 %cmp12.i, i32 -1, i32 %inc16. <
  %acc_length.2.i = add i32 %acc_length.2.v.i, %acc_length.04 <
  %in_ptr.1.i = select i1 %cmp12.i, i32* getelementptr inboun <
  %coef_start.1.i = select i1 %cmp12.i, i32* %incdec.ptr.i, i <
  %inc20.i = add nuw nsw i32 %i.042.i, 1		      <
  %exitcond47.i = icmp eq i32 %inc20.i, 700		      <
  br i1 %exitcond47.i, label %fir_filter_int.exit, label %for <

fir_filter_int.exit:                              ; preds = % |	for.body:                                         ; preds = %
							      >	  %i.018 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
							      >	  tail call void @fir_filter_int(i32* getelementptr inbounds 
  %inc = add nuw nsw i32 %i.018, 1				  %inc = add nuw nsw i32 %i.018, 1
  %exitcond19 = icmp eq i32 %inc, 200				  %exitcond19 = icmp eq i32 %inc, 200
  br i1 %exitcond19, label %for.body3.preheader, label %for.b |	  br i1 %exitcond19, label %for.body3.preheader, label %for.b

for.body3.preheader:                              ; preds = % |	for.body3.preheader:                              ; preds = %
  br label %for.body3						  br label %for.body3

for.body3:                                        ; preds = %	for.body3:                                        ; preds = %
  %i.117 = phi i32 [ %inc8, %for.inc7 ], [ 0, %for.body3.preh	  %i.117 = phi i32 [ %inc8, %for.inc7 ], [ 0, %for.body3.preh
  %arrayidx = getelementptr inbounds [720 x i32], [720 x i32]	  %arrayidx = getelementptr inbounds [720 x i32], [720 x i32]
  %4 = load i32, i32* %arrayidx, align 4, !tbaa !1	      |	  %0 = load i32, i32* %arrayidx, align 4, !tbaa !1
  %arrayidx4 = getelementptr inbounds [720 x i32], [720 x i32	  %arrayidx4 = getelementptr inbounds [720 x i32], [720 x i32
  %5 = load i32, i32* %arrayidx4, align 4, !tbaa !1	      |	  %1 = load i32, i32* %arrayidx4, align 4, !tbaa !1
  %cmp5 = icmp eq i32 %4, %5				      |	  %cmp5 = icmp eq i32 %0, %1
  br i1 %cmp5, label %for.inc7, label %if.then			  br i1 %cmp5, label %for.inc7, label %if.then

if.then:                                          ; preds = %	if.then:                                          ; preds = %
  %call = tail call i32 (i8*, ...)* @printf(i8* getelementptr |	  %call = tail call i32 (i8*, ...)* @printf(i8* getelementptr
  br label %for.inc7						  br label %for.inc7

for.inc7:                                         ; preds = %	for.inc7:                                         ; preds = %
  %inc8 = add nuw nsw i32 %i.117, 1				  %inc8 = add nuw nsw i32 %i.117, 1
  %exitcond = icmp eq i32 %inc8, 700				  %exitcond = icmp eq i32 %inc8, 700
  br i1 %exitcond, label %for.end9, label %for.body3		  br i1 %exitcond, label %for.end9, label %for.body3

for.end9:                                         ; preds = %	for.end9:                                         ; preds = %
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([3 	  %puts = tail call i32 @puts(i8* getelementptr inbounds ([3 
  ret i32 -1							  ret i32 -1
}								}

; Function Attrs: nounwind					; Function Attrs: nounwind
define void @fir_filter_int(i32* readonly %in, i32* nocapture	define void @fir_filter_int(i32* readonly %in, i32* nocapture
entry:								entry:
  %add.ptr.sum = add i32 %in_len, -1				  %add.ptr.sum = add i32 %in_len, -1
  %add.ptr1 = getelementptr inbounds i32, i32* %in, i32 %add.	  %add.ptr1 = getelementptr inbounds i32, i32* %in, i32 %add.
  %cmp41 = icmp sgt i32 %in_len, 0			      |	  %cmp39 = icmp sgt i32 %in_len, 0
  br i1 %cmp41, label %for.body.lr.ph, label %for.end21	      |	  br i1 %cmp39, label %for.body.lr.ph, label %for.end21

for.body.lr.ph:                                   ; preds = %	for.body.lr.ph:                                   ; preds = %
  %add.ptr3 = getelementptr inbounds i32, i32* %in, i32 17	  %add.ptr3 = getelementptr inbounds i32, i32* %in, i32 17
  br label %for.body						  br label %for.body

for.body:                                         ; preds = % |	for.body:                                         ; preds = %
  %out.addr.046 = phi i32* [ %out, %for.body.lr.ph ], [ %incd |	  %out.addr.044 = phi i32* [ %out, %for.body.lr.ph ], [ %incd
  %coef_start.045 = phi i32* [ %coef, %for.body.lr.ph ], [ %c |	  %coef_start.043 = phi i32* [ %coef, %for.body.lr.ph ], [ %c
  %in_ptr.044 = phi i32* [ %add.ptr3, %for.body.lr.ph ], [ %i |	  %in_ptr.042 = phi i32* [ %add.ptr3, %for.body.lr.ph ], [ %i
  %acc_length.043 = phi i32 [ 18, %for.body.lr.ph ], [ %acc_l |	  %i.040 = phi i32 [ 0, %for.body.lr.ph ], [ %inc20, %for.bod
  %i.042 = phi i32 [ 0, %for.body.lr.ph ], [ %inc20, %for.end |	  %incdec.ptr = getelementptr inbounds i32, i32* %coef_start.
  %incdec.ptr = getelementptr inbounds i32, i32* %coef_start. |	  %0 = load i32, i32* %coef_start.043, align 4, !tbaa !1
  %0 = load i32, i32* %coef_start.045, align 4, !tbaa !1      |	  %1 = load i32, i32* %in_ptr.042, align 4, !tbaa !1
  %1 = load i32, i32* %in_ptr.044, align 4, !tbaa !1	      <
  %mul = mul nsw i32 %1, %0					  %mul = mul nsw i32 %1, %0
  %cmp636 = icmp sgt i32 %acc_length.043, 1		      |	  %data_ptr.038 = getelementptr inbounds i32, i32* %in_ptr.04
  br i1 %cmp636, label %for.body7.preheader, label %for.end   |	  %incdec.ptr8 = getelementptr inbounds i32, i32* %coef_start
							      |	  %2 = load i32, i32* %incdec.ptr, align 4, !tbaa !1
for.body7.preheader:                              ; preds = % |	  %3 = load i32, i32* %data_ptr.038, align 4, !tbaa !1
  br label %for.body7					      <
							      <
for.body7:                                        ; preds = % <
  %in_ptr.044.pn = phi i32* [ %data_ptr.040, %for.body7 ], [  <
  %coef_ptr.039 = phi i32* [ %incdec.ptr8, %for.body7 ], [ %i <
  %acc.038 = phi i32 [ %add, %for.body7 ], [ %mul, %for.body7 <
  %j.037 = phi i32 [ %inc, %for.body7 ], [ 1, %for.body7.preh <
  %data_ptr.040 = getelementptr inbounds i32, i32* %in_ptr.04 <
  %incdec.ptr8 = getelementptr inbounds i32, i32* %coef_ptr.0 <
  %2 = load i32, i32* %coef_ptr.039, align 4, !tbaa !1	      <
  %3 = load i32, i32* %data_ptr.040, align 4, !tbaa !1	      <
  %mul10 = mul nsw i32 %3, %2					  %mul10 = mul nsw i32 %3, %2
  %add = add nsw i32 %mul10, %acc.038			      |	  %add = add nsw i32 %mul10, %mul
  %inc = add nuw nsw i32 %j.037, 1			      |	  %data_ptr.038.1 = getelementptr inbounds i32, i32* %in_ptr.
  %exitcond = icmp eq i32 %inc, %acc_length.043		      |	  %incdec.ptr8.1 = getelementptr inbounds i32, i32* %coef_sta
  br i1 %exitcond, label %for.end.loopexit, label %for.body7  |	  %4 = load i32, i32* %incdec.ptr8, align 4, !tbaa !1
							      |	  %5 = load i32, i32* %data_ptr.038.1, align 4, !tbaa !1
for.end.loopexit:                                 ; preds = % |	  %mul10.1 = mul nsw i32 %5, %4
  %add.lcssa = phi i32 [ %add, %for.body7 ]		      |	  %add.1 = add nsw i32 %mul10.1, %add
  br label %for.end					      |	  %data_ptr.038.2 = getelementptr inbounds i32, i32* %in_ptr.
							      |	  %incdec.ptr8.2 = getelementptr inbounds i32, i32* %coef_sta
for.end:                                          ; preds = % |	  %6 = load i32, i32* %incdec.ptr8.1, align 4, !tbaa !1
  %acc.0.lcssa = phi i32 [ %mul, %for.body ], [ %add.lcssa, % |	  %7 = load i32, i32* %data_ptr.038.2, align 4, !tbaa !1
  %incdec.ptr11 = getelementptr inbounds i32, i32* %out.addr. |	  %mul10.2 = mul nsw i32 %7, %6
  store i32 %acc.0.lcssa, i32* %out.addr.046, align 4, !tbaa  |	  %add.2 = add nsw i32 %mul10.2, %add.1
  %cmp12 = icmp eq i32* %in_ptr.044, %add.ptr1		      |	  %data_ptr.038.3 = getelementptr inbounds i32, i32* %in_ptr.
  %cmp14 = icmp slt i32 %acc_length.043, %coef_len	      |	  %incdec.ptr8.3 = getelementptr inbounds i32, i32* %coef_sta
  %inc16 = zext i1 %cmp14 to i32			      |	  %8 = load i32, i32* %incdec.ptr8.2, align 4, !tbaa !1
  %incdec.ptr17 = getelementptr inbounds i32, i32* %in_ptr.04 |	  %9 = load i32, i32* %data_ptr.038.3, align 4, !tbaa !1
  %acc_length.2.v = select i1 %cmp12, i32 -1, i32 %inc16      |	  %mul10.3 = mul nsw i32 %9, %8
  %acc_length.2 = add i32 %acc_length.043, %acc_length.2.v    |	  %add.3 = add nsw i32 %mul10.3, %add.2
  %in_ptr.1 = select i1 %cmp12, i32* %in_ptr.044, i32* %incde |	  %data_ptr.038.4 = getelementptr inbounds i32, i32* %in_ptr.
  %coef_start.1 = select i1 %cmp12, i32* %incdec.ptr, i32* %c |	  %incdec.ptr8.4 = getelementptr inbounds i32, i32* %coef_sta
  %inc20 = add nuw nsw i32 %i.042, 1			      |	  %10 = load i32, i32* %incdec.ptr8.3, align 4, !tbaa !1
  %exitcond47 = icmp eq i32 %inc20, %in_len		      |	  %11 = load i32, i32* %data_ptr.038.4, align 4, !tbaa !1
  br i1 %exitcond47, label %for.end21.loopexit, label %for.bo |	  %mul10.4 = mul nsw i32 %11, %10
							      >	  %add.4 = add nsw i32 %mul10.4, %add.3
							      >	  %data_ptr.038.5 = getelementptr inbounds i32, i32* %in_ptr.
							      >	  %incdec.ptr8.5 = getelementptr inbounds i32, i32* %coef_sta
							      >	  %12 = load i32, i32* %incdec.ptr8.4, align 4, !tbaa !1
							      >	  %13 = load i32, i32* %data_ptr.038.5, align 4, !tbaa !1
							      >	  %mul10.5 = mul nsw i32 %13, %12
							      >	  %add.5 = add nsw i32 %mul10.5, %add.4
							      >	  %data_ptr.038.6 = getelementptr inbounds i32, i32* %in_ptr.
							      >	  %incdec.ptr8.6 = getelementptr inbounds i32, i32* %coef_sta
							      >	  %14 = load i32, i32* %incdec.ptr8.5, align 4, !tbaa !1
							      >	  %15 = load i32, i32* %data_ptr.038.6, align 4, !tbaa !1
							      >	  %mul10.6 = mul nsw i32 %15, %14
							      >	  %add.6 = add nsw i32 %mul10.6, %add.5
							      >	  %data_ptr.038.7 = getelementptr inbounds i32, i32* %in_ptr.
							      >	  %incdec.ptr8.7 = getelementptr inbounds i32, i32* %coef_sta
							      >	  %16 = load i32, i32* %incdec.ptr8.6, align 4, !tbaa !1
							      >	  %17 = load i32, i32* %data_ptr.038.7, align 4, !tbaa !1
							      >	  %mul10.7 = mul nsw i32 %17, %16
							      >	  %add.7 = add nsw i32 %mul10.7, %add.6
							      >	  %data_ptr.038.8 = getelementptr inbounds i32, i32* %in_ptr.
							      >	  %incdec.ptr8.8 = getelementptr inbounds i32, i32* %coef_sta
							      >	  %18 = load i32, i32* %incdec.ptr8.7, align 4, !tbaa !1
							      >	  %19 = load i32, i32* %data_ptr.038.8, align 4, !tbaa !1
							      >	  %mul10.8 = mul nsw i32 %19, %18
							      >	  %add.8 = add nsw i32 %mul10.8, %add.7
							      >	  %data_ptr.038.9 = getelementptr inbounds i32, i32* %in_ptr.
							      >	  %incdec.ptr8.9 = getelementptr inbounds i32, i32* %coef_sta
							      >	  %20 = load i32, i32* %incdec.ptr8.8, align 4, !tbaa !1
							      >	  %21 = load i32, i32* %data_ptr.038.9, align 4, !tbaa !1
							      >	  %mul10.9 = mul nsw i32 %21, %20
							      >	  %add.9 = add nsw i32 %mul10.9, %add.8
							      >	  %data_ptr.038.10 = getelementptr inbounds i32, i32* %in_ptr
							      >	  %incdec.ptr8.10 = getelementptr inbounds i32, i32* %coef_st
							      >	  %22 = load i32, i32* %incdec.ptr8.9, align 4, !tbaa !1
							      >	  %23 = load i32, i32* %data_ptr.038.10, align 4, !tbaa !1
							      >	  %mul10.10 = mul nsw i32 %23, %22
							      >	  %add.10 = add nsw i32 %mul10.10, %add.9
							      >	  %data_ptr.038.11 = getelementptr inbounds i32, i32* %in_ptr
							      >	  %incdec.ptr8.11 = getelementptr inbounds i32, i32* %coef_st
							      >	  %24 = load i32, i32* %incdec.ptr8.10, align 4, !tbaa !1
							      >	  %25 = load i32, i32* %data_ptr.038.11, align 4, !tbaa !1
							      >	  %mul10.11 = mul nsw i32 %25, %24
							      >	  %add.11 = add nsw i32 %mul10.11, %add.10
							      >	  %data_ptr.038.12 = getelementptr inbounds i32, i32* %in_ptr
							      >	  %incdec.ptr8.12 = getelementptr inbounds i32, i32* %coef_st
							      >	  %26 = load i32, i32* %incdec.ptr8.11, align 4, !tbaa !1
							      >	  %27 = load i32, i32* %data_ptr.038.12, align 4, !tbaa !1
							      >	  %mul10.12 = mul nsw i32 %27, %26
							      >	  %add.12 = add nsw i32 %mul10.12, %add.11
							      >	  %data_ptr.038.13 = getelementptr inbounds i32, i32* %in_ptr
							      >	  %incdec.ptr8.13 = getelementptr inbounds i32, i32* %coef_st
							      >	  %28 = load i32, i32* %incdec.ptr8.12, align 4, !tbaa !1
							      >	  %29 = load i32, i32* %data_ptr.038.13, align 4, !tbaa !1
							      >	  %mul10.13 = mul nsw i32 %29, %28
							      >	  %add.13 = add nsw i32 %mul10.13, %add.12
							      >	  %data_ptr.038.14 = getelementptr inbounds i32, i32* %in_ptr
							      >	  %incdec.ptr8.14 = getelementptr inbounds i32, i32* %coef_st
							      >	  %30 = load i32, i32* %incdec.ptr8.13, align 4, !tbaa !1
							      >	  %31 = load i32, i32* %data_ptr.038.14, align 4, !tbaa !1
							      >	  %mul10.14 = mul nsw i32 %31, %30
							      >	  %add.14 = add nsw i32 %mul10.14, %add.13
							      >	  %data_ptr.038.15 = getelementptr inbounds i32, i32* %in_ptr
							      >	  %incdec.ptr8.15 = getelementptr inbounds i32, i32* %coef_st
							      >	  %32 = load i32, i32* %incdec.ptr8.14, align 4, !tbaa !1
							      >	  %33 = load i32, i32* %data_ptr.038.15, align 4, !tbaa !1
							      >	  %mul10.15 = mul nsw i32 %33, %32
							      >	  %add.15 = add nsw i32 %mul10.15, %add.14
							      >	  %data_ptr.038.16 = getelementptr inbounds i32, i32* %in_ptr
							      >	  %34 = load i32, i32* %incdec.ptr8.15, align 4, !tbaa !1
							      >	  %35 = load i32, i32* %data_ptr.038.16, align 4, !tbaa !1
							      >	  %mul10.16 = mul nsw i32 %35, %34
							      >	  %add.16 = add nsw i32 %mul10.16, %add.15
							      >	  %incdec.ptr11 = getelementptr inbounds i32, i32* %out.addr.
							      >	  store i32 %add.16, i32* %out.addr.044, align 4, !tbaa !1
							      >	  %cmp12 = icmp eq i32* %in_ptr.042, %add.ptr1
							      >	  %incdec.ptr17 = getelementptr inbounds i32, i32* %in_ptr.04
							      >	  %in_ptr.1 = select i1 %cmp12, i32* %in_ptr.042, i32* %incde
							      >	  %coef_start.1 = select i1 %cmp12, i32* %incdec.ptr, i32* %c
							      >	  %inc20 = add nuw nsw i32 %i.040, 1
							      >	  %exitcond = icmp eq i32 %inc20, %in_len
							      >	  br i1 %exitcond, label %for.end21.loopexit, label %for.body

for.end21.loopexit:                               ; preds = % |	for.end21.loopexit:                               ; preds = %
  br label %for.end21						  br label %for.end21

for.end21:                                        ; preds = %	for.end21:                                        ; preds = %
  ret void							  ret void
}								}

; Function Attrs: nounwind					; Function Attrs: nounwind
declare i32 @printf(i8* nocapture readonly, ...) #0		declare i32 @printf(i8* nocapture readonly, ...) #0

; Function Attrs: nounwind					; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) #1			declare i32 @puts(i8* nocapture readonly) #1

attributes #0 = { nounwind "less-precise-fpmad"="false" "no-f	attributes #0 = { nounwind "less-precise-fpmad"="false" "no-f
attributes #1 = { nounwind }					attributes #1 = { nounwind }

!llvm.ident = !{!0}						!llvm.ident = !{!0}

!0 = !{!"clang version 3.7.0 (trunk 234885)"}			!0 = !{!"clang version 3.7.0 (trunk 234885)"}
!1 = !{!2, !2, i64 0}						!1 = !{!2, !2, i64 0}
!2 = !{!"int", !3, i64 0}					!2 = !{!"int", !3, i64 0}
!3 = !{!"omnipotent char", !4, i64 0}				!3 = !{!"omnipotent char", !4, i64 0}
!4 = !{!"Simple C/C++ TBAA"}					!4 = !{!"Simple C/C++ TBAA"}
